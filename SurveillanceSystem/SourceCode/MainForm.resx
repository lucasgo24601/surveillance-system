<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="picMinimized.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAACAAAAAgCAYAAABzenr0AAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8
        YQUAAAAJcEhZcwAADrwAAA68AZW8ckkAAAF2SURBVFhH7dZJMgRBGMXxsjUFDoDAWXAlYbqCaS+aCxgX
        xhsIjsCCDTvjjv+LsBBVr0pmVtKbfhG/iA7y+6q7qzq/LHqJzBBmsYht7GH/+/US5qA12TOFNdzj8xda
        s45pZIk+7TPcxZq8QN9KckZwAtc8xilGERVd/AquYYprqGdwzuEatXGBoCzANchBz1NjxvEOV5zDByZQ
        mw24wpy2YDOAR7iinJ4wiEq0w7mCvzCPSpbhFt/hGEeRVKNa13MVlXRQXviGGaRG2/Eryn13UckBygt1
        v/RspKYf7rk6RCVdfwM7KC/ULWgz1TRFg2/BCsoL5RZ6xylU63rah7DrP0NtDv+1EdWemjbhinKq3YoV
        DQoNDFeYg3pPojEama44h+Ajmg4PrkEbl+hDUHR80jHKNUpxg+hzoQp0oHQNY5xhDMnRfdMR2zVvoh1Q
        EzZLNBF1WnqAu9hPWqO1baZobYahXUyfTONbA0z0Wn/T/7Sml8AUxRfwfATyH1HJdgAAAABJRU5ErkJg
        gg==
</value>
  </data>
  <data name="picClose.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAACAAAAAgCAYAAABzenr0AAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8
        YQUAAAAJcEhZcwAADrwAAA68AZW8ckkAAAJRSURBVFhHtdfHjtUwAIXhAAtAiA5vQJeADYJXoMwKxIr6
        OvQnoK9ps6ItmJk9RcArIBBdgg1F8J9wjTy+x45zCUf6pCixYydxHKfpkVXYh1N4hFf4NqLtGZzGfqjs
        YNmOi/iIX5U+4RJUd+IswRnoCl0jNb7jLJaiVzbjMdxJJ/EEW1GVXXgLd6J/8Q67UcxGqKA7wRDeYxNs
        FuM5XMUhvYDG11g0WFyF2E+zL1VT5jzmRYPuB1zh4CR0+25H+1LTUJnjKHVEx+YNyitwBUWv0mGELMBN
        pOXUsYUIOQTVTcsF19BmOb7AFVJPTyBN2om08ZBjyN2Jr1iBZu9oh6MrWAcXdeIeHsA1rqxBaSLTtN3O
        3+5goKtTYy5qeNGfzbHkHlVMA7+ZjXbk6ES5Trio7A24c8Xm0LyOdpSoE7lbHae2cXmD4khN3ccy5KJj
        GheurqO2e3XgIbo6oE66uk7bgdpHkHvV0qhM1+AL2kdQMwhrGw+peQOkHYRdr+Ed5BrX/twxdUIdd+cM
        2tdQ6zx3UPSM1sNFDdyFBp22XdaiNBEdQOdUrOk0Tfqq5eaJIyhNxSvR5ipcIdFd0IclJG08SDtxEKWr
        v46/2YLS51hXoU/sBtwa7XP0zFXmKHJXLjo2tkY8B1c41rVmkJoyFzAWLcm0XHIVhvQSdkmmaDWjhaOr
        OIQP0OqrGC2d/8fKWBe2B1XRAHkKd6JJPMM29Ip+pzQw+3ysUqqrFXDvX7M4O3AZ+uF0jTifoYXuTgyW
        1dDUqR9W/Yq733Mdm4LWghVpmt8D3ngcrEuNqQAAAABJRU5ErkJggg==
</value>
  </data>
</root>